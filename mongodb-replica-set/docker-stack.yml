version: "3.8"

x-env:
  db-mongo: &db-mongo
    image: mongo:5.0
    command: "mongod --replSet ${MY_MONOGO_REPLICA_SET_NAME} --keyFile /etc/mongodb.keyfile --bind_ip 0.0.0.0 --port 27017 --dbpath /data/db --timeZoneInfo /usr/share/zoneinfo"
    networks:
      - backend
    secrets:
      - source: mongodb.keyfile
        target: /etc/mongodb.keyfile
        uid: '999'
        gid: '999'
        mode: 0400
    deploy:
      restart_policy:
        condition: on-failure

services:
  #
  # db-mongo
  #
  db-mongo1:
    <<: *db-mongo
    command: /root/bootstrap.sh
    environment:
      MY_MONOGO_REPLICA_SET_NAME: ${MY_MONOGO_REPLICA_SET_NAME}
      MY_INITDB_ROOT_USERNAME: ${MY_INITDB_ROOT_USERNAME}
      MY_INITDB_ROOT_PASSWORD: ${MY_INITDB_ROOT_PASSWORD}
    configs:
      - source: bootstrap.sh
        target: /root/bootstrap.sh
        mode: 0544
      - source: init-replica-set.sh
        target: /root/init-replica-set.sh
        mode: 0544
    volumes:
      - mongodb1:/data/db
    deploy:
      placement:
        constraints:
          # - node.labels.mongo.replica == 1
          - node.role == manager

  db-mongo2:
    <<: *db-mongo
    volumes:
      - mongodb2:/data/db
    deploy:
      placement:
        constraints:
          # - node.labels.mongo.replica == 2
          - node.role == manager

  db-mongo3:
    <<: *db-mongo
    volumes:
      - mongodb3:/data/db
    deploy:
      placement:
        constraints:
          # - node.labels.mongo.replica == 3
          - node.role == manager

# configs
configs:
  bootstrap.sh:
    file: deploy/bootstrap.sh
  init-replica-set.sh:
    file: deploy/init-replica-set.sh

# secrets
secrets:
  mongodb.keyfile:
    file: deploy/mongodb.keyfile

# networks
networks:
  backend:
    driver: overlay

# volumes
volumes:
  mongodb1:
  mongodb2:
  mongodb3:
