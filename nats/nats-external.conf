# server name
server_name: $MY_NATS_SERVER_NAME

# Client port of 4222 on all interfaces
port: 4222

# HTTP monitoring port
monitor_port: 8222

# server configuration authentication/authorization
# note: decentralized jwt authentication/authorization seems cannot config mqtt user to no_auth_user
# allowed_connection_types: STANDARD, WEBSOCKET, LEAFNODE, MQTT
authorization: {
    users: [
        { user: $MY_LEAF_USERNAME, password: $MY_LEAF_PASSWORD, allowed_connection_types: ["STANDARD"] },
        { user: $MY_MQTT_USERNAME, password: $MY_MQTT_PASSWORD, allowed_connection_types: ["MQTT"] },
        { user: $MY_WEBSOCKET_USERNAME, password: $MY_WEBSOCKET_PASSWORD, allowed_connection_types: ["WEBSOCKET"] },
    ]
}

jetstream {
    store_dir: /data/jetstream
}

# leaf outcoming configuration
leafnodes {
    remotes = [ 
        { urls: [ $URL_NATS1, $URL_NATS2, $URL_NATS3 ] }
    ]
}

# tls cert files for nats connection
tls {
    ca_file:   "/etc/nats/nats/ca.crt"
    cert_file: "/etc/nats/nats/server.crt"
    key_file:  "/etc/nats/nats/server.key"
    verify:    true
}

mqtt {
    # Specify a host and port to listen for websocket connections
    #
    # listen: "host:port"
    # It can also be configured with individual parameters,
    # namely host and port.
    #
    # host: "hostname"
    # port: 1883 for non-tls, 8883 for tls
    port: 8883

    # tls cert files for mqtt connection
    tls {
        ca_file:   "/etc/nats/mqtt/ca.crt"
        cert_file: "/etc/nats/mqtt/server.crt"
        key_file:  "/etc/nats/mqtt/server.key"
        verify:    true
    }

    # If no user name is provided when an MQTT client connects, will default
    # this user name in the authentication phase. If specified, this will
    # override, for MQTT clients, any `no_auth_user` value defined in the
    # main configuration file.
    # Note that this is not compatible with running the server in operator mode.
    #
    # no_auth_user: mqtt_user

    # See below to know what is the normal way of limiting MQTT clients
    # to specific users.
    # If there are no users specified in the configuration, this simple authorization
    # block allows you to override the values that would be configured in the
    # equivalent block in the main section.

    # authorization {
    #   # If this is specified, the client has to provide the same username
    #   # and password to be able to connect.
    #   username: "my_mqtt_user"
    #   password: "my_mqtt_password"

    #   # If this is specified, the password field in the CONNECT packet has to
    #   # match this token.
    #   # token: "my_token"

    #   # This overrides the main's authorization timeout. For consistency
    #   # with the main's authorization configuration block, this is expressed
    #   # as a number of seconds.
    #   timeout: 2.0
    # }

    # This is the amount of time after which a QoS 1 message sent to
    # a client is redelivered as a DUPLICATE if the server has not
    # received the PUBACK packet on the original Packet Identifier.
    # The value has to be positive.
    # Zero will cause the server to use the default value (30 seconds).
    # Note that changes to this option is applied only to new MQTT subscriptions.
    #
    # Expressed as a time duration, with "s", "m", "h" indicating seconds,
    # minutes and hours respectively. For instance "10s" for 10 seconds,
    # "1m" for 1 minute, etc...
    #
    # ack_wait: "1m"

    # This is the amount of QoS 1 messages the server can send to
    # a subscription without receiving any PUBACK for those messages.
    # The valid range is [0..65535].
    #
    # The total of subscriptions' max_ack_pending on a given session cannot
    # exceed 65535. Attempting to create a subscription that would bring
    # the total above the limit would result in the server returning 0x80
    # in the SUBACK for this subscription.
    # Due to how the NATS Server handles the MQTT "#" wildcard, each
    # subscription ending with "#" will use 2 times the max_ack_pending value.
    # Note that changes to this option is applied only to new subscriptions.
    #
    # max_ack_pending: 100
}
